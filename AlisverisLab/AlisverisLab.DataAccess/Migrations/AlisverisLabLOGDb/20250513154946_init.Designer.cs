// <auto-generated />
using System;
using AlisverisLab.DataAccess.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlisverisLab.DataAccess.Migrations.AlisverisLabLOGDb
{
    [DbContext(typeof(AlisverisLabLOGDbContext))]
    [Migration("20250513154946_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlisverisLab.Entity.POCO.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("AlisverisLab.Entity.POCO.LogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LogTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(925),
                            LogTypeName = "Insert",
                            UpdatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(926)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(929),
                            LogTypeName = "Update",
                            UpdatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(929)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(931),
                            LogTypeName = "Delete",
                            UpdatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(931)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(933),
                            LogTypeName = "Error",
                            UpdatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(933)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(935),
                            LogTypeName = "Warning",
                            UpdatedTime = new DateTime(2025, 5, 13, 18, 49, 45, 959, DateTimeKind.Local).AddTicks(935)
                        });
                });

            modelBuilder.Entity("AlisverisLab.Entity.POCO.Log", b =>
                {
                    b.HasOne("AlisverisLab.Entity.POCO.LogType", "LogType")
                        .WithMany("Logs")
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("AlisverisLab.Entity.POCO.LogType", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
